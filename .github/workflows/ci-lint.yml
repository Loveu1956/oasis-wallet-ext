# NOTE: This name appears in GitHub's Checks API and in workflow's status badge.
name: ci-lint

# Trigger the workflow when:
on:
  # A push occurs to one of the matched branches.
  push:
    branches:
      - master
      - stable/*
  # Or when a pull request event occurs for a pull request against one of the
  # matched branches.
  pull_request:
    branches:
      - master
      - stable/*

jobs:
  lint:
    # NOTE: This name appears in GitHub's Checks API.
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # Check out pull request's HEAD commit instead of the merge commit to
          # prevent gitlint from failing due to too long commit message titles,
          # e.g. "Merge 3e621938d65caaa67f8e35d145335d889d470fc8 into 19a39b2f66cd7a165082d1486b2f1eb36ec2354a".
          ref: ${{ github.event.pull_request.head.sha }}
          # Fetch all history so gitlint can check the relevant commits.
          fetch-depth: '0'
      - name: Set up Python 3
        uses: actions/setup-python@v2.2.2
        with:
          python-version: '3.x'
      - name: Install gitlint
        run: |
          python -m pip install gitlint
      - name: Lint git commits
        run: |
          make lint-git
      - name: Check spelling
        # NOTE: Using the cspell-action GitHub Action will annotate all spelling
        # errors inline while running 'make lint-spell' would only produce a
        # single annotation of 'Process completed with exit code 2'.
        uses: streetsidesoftware/cspell-action@v1.3.1
        with:
          # File patterns to check.
          # NOTE: Keep this in-sync with the patterns in lint-spell Make target.
          files: |
            src/**
            docs/**
            public/**
            README.md
            package.json
          # Notification level to use with inline reporting of spelling errors.
          inline: warning
          # Fail if any spelling issues are found.
          strict: true
          # Always check all files.
          incremental_files_only: false
          # cSpell configuration file.
          config: cspell.yaml
        # Run this step even if the previous one fails so that all linting
        # errors can be seen at once.
        if: always()

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - run: yarn install --frozen-lockfile
      - run: yarn test
